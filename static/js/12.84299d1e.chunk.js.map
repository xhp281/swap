{"version":3,"sources":["../node_modules/@uniswap/widgets/dist/validateTokens-bc6da707.js","../../../lib/runtime/ucs2length.ts","../../src/formats.ts"],"names":["validate","validate10","func2","require","default","pattern0","RegExp","pattern4","pattern10","pattern11","formats0","fullFormats","formats2","uri","pattern1","pattern2","pattern3","validate15","data","_ref","arguments","length","undefined","_ref$instancePath","instancePath","parentData","parentDataProperty","rootData","vErrors","errors","_errs0","valid0","_errs1","_errs3","valid2","_errs4","err0","schemaPath","keyword","params","limit","message","push","err1","err2","type","_valid1","_errs6","err3","_errs8","isFinite","err4","_errs10","err5","err6","_valid0","err7","validate14","_ref2","_ref2$instancePath","_ref2$rootData","_errs12","_typeof","Array","isArray","Object","keys","key0","_errs14","_errs15","err8","propertyName","err9","test","err10","pattern","err11","valid3","err12","key1","_errs18","replace","concat","valid5","err13","err14","validate13","_ref3","_ref3$instancePath","_ref3$rootData","validate12","_ref4","_ref4$instancePath","_ref4$rootData","_errs2","_errs5","validate11","_ref5","_ref5$instancePath","_ref5$rootData","missing0","chainId","address","decimals","name","symbol","missingProperty","additionalProperty","data0","isNaN","comparison","data1","data2","data3","data4","logoURI","data5","format","tags","data6","len0","i0","data7","_errs16","_errs17","extensions","_errs19","_ref6","_ref6$instancePath","_ref6$rootData","tokens","timestamp","version","_errs7","missing1","major","minor","patch","_errs9","keywords","data8","valid4","len1","i1","data9","_errs21","j0","i2","indices0","item0","i","j","data10","_errs23","key2","_errs25","_errs26","valid6","key3","data11","_errs29","_errs30","missing2","description","_errs32","key4","data12","_errs33","valid10","data13","_errs35","valid8","data14","_errs37"],"mappings":"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","file":"static/js/12.84299d1e.chunk.js","sourcesContent":["import _typeof from '@babel/runtime/helpers/typeof';\n\nvar validate = validate10;\n\nvar func2 = require(\"ajv/dist/runtime/ucs2length\").default;\n\nvar pattern0 = new RegExp(\"^[\\\\w ]+$\", \"u\");\nvar pattern4 = new RegExp(\"^[\\\\w]+$\", \"u\");\nvar pattern10 = new RegExp(\"^[ \\\\w]+$\", \"u\");\nvar pattern11 = new RegExp(\"^[ \\\\w\\\\.,:]+$\", \"u\");\n\nvar formats0 = require(\"ajv-formats/dist/formats\").fullFormats[\"date-time\"];\n\nvar formats2 = require(\"ajv-formats/dist/formats\").fullFormats.uri;\nvar pattern1 = new RegExp(\"^0x[a-fA-F0-9]{40}$\", \"u\");\nvar pattern2 = new RegExp(\"^[ \\\\w.'+\\\\-%/À-ÖØ-öø-ÿ:&\\\\[\\\\]\\\\(\\\\)]+$\", \"u\");\nvar pattern3 = new RegExp(\"^[a-zA-Z0-9+\\\\-%/$.]+$\", \"u\");\n\nfunction validate15(data) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$instancePath = _ref.instancePath,\n      instancePath = _ref$instancePath === void 0 ? \"\" : _ref$instancePath;\n      _ref.parentData;\n      _ref.parentDataProperty;\n      _ref.rootData;\n\n  var vErrors = null;\n  var errors = 0;\n  var _errs0 = errors;\n  var valid0 = false;\n  var _errs1 = errors;\n  var _errs3 = errors;\n  var valid2 = false;\n  var _errs4 = errors;\n\n  if (errors === _errs4) {\n    if (typeof data === \"string\") {\n      if (func2(data) > 42) {\n        var err0 = {\n          instancePath: instancePath,\n          schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/maxLength\",\n          keyword: \"maxLength\",\n          params: {\n            limit: 42\n          },\n          message: \"must NOT have more than 42 characters\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      } else {\n        if (func2(data) < 1) {\n          var err1 = {\n            instancePath: instancePath,\n            schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/minLength\",\n            keyword: \"minLength\",\n            params: {\n              limit: 1\n            },\n            message: \"must NOT have fewer than 1 characters\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err1];\n          } else {\n            vErrors.push(err1);\n          }\n\n          errors++;\n        }\n      }\n    } else {\n      var err2 = {\n        instancePath: instancePath,\n        schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/type\",\n        keyword: \"type\",\n        params: {\n          type: \"string\"\n        },\n        message: \"must be string\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err2];\n      } else {\n        vErrors.push(err2);\n      }\n\n      errors++;\n    }\n  }\n\n  var _valid1 = _errs4 === errors;\n\n  valid2 = valid2 || _valid1;\n\n  if (!valid2) {\n    var _errs6 = errors;\n\n    if (typeof data !== \"boolean\") {\n      var err3 = {\n        instancePath: instancePath,\n        schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/1/type\",\n        keyword: \"type\",\n        params: {\n          type: \"boolean\"\n        },\n        message: \"must be boolean\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err3];\n      } else {\n        vErrors.push(err3);\n      }\n\n      errors++;\n    }\n\n    var _valid1 = _errs6 === errors;\n\n    valid2 = valid2 || _valid1;\n\n    if (!valid2) {\n      var _errs8 = errors;\n\n      if (!(typeof data == \"number\" && isFinite(data))) {\n        var err4 = {\n          instancePath: instancePath,\n          schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/2/type\",\n          keyword: \"type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"must be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err4];\n        } else {\n          vErrors.push(err4);\n        }\n\n        errors++;\n      }\n\n      var _valid1 = _errs8 === errors;\n\n      valid2 = valid2 || _valid1;\n\n      if (!valid2) {\n        var _errs10 = errors;\n\n        if (data !== null) {\n          var err5 = {\n            instancePath: instancePath,\n            schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/3/type\",\n            keyword: \"type\",\n            params: {\n              type: \"null\"\n            },\n            message: \"must be null\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err5];\n          } else {\n            vErrors.push(err5);\n          }\n\n          errors++;\n        }\n\n        var _valid1 = _errs10 === errors;\n\n        valid2 = valid2 || _valid1;\n      }\n    }\n  }\n\n  if (!valid2) {\n    var err6 = {\n      instancePath: instancePath,\n      schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf\",\n      keyword: \"anyOf\",\n      params: {},\n      message: \"must match a schema in anyOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err6];\n    } else {\n      vErrors.push(err6);\n    }\n\n    errors++;\n  } else {\n    errors = _errs3;\n\n    if (vErrors !== null) {\n      if (_errs3) {\n        vErrors.length = _errs3;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  var _valid0 = _errs1 === errors;\n\n  valid0 = valid0 || _valid0;\n\n  if (!valid0) {\n    var err7 = {\n      instancePath: instancePath,\n      schemaPath: \"#/anyOf\",\n      keyword: \"anyOf\",\n      params: {},\n      message: \"must match a schema in anyOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err7];\n    } else {\n      vErrors.push(err7);\n    }\n\n    errors++;\n    validate15.errors = vErrors;\n    return false;\n  } else {\n    errors = _errs0;\n\n    if (vErrors !== null) {\n      if (_errs0) {\n        vErrors.length = _errs0;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  validate15.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate14(data) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref2$instancePath = _ref2.instancePath,\n      instancePath = _ref2$instancePath === void 0 ? \"\" : _ref2$instancePath;\n      _ref2.parentData;\n      _ref2.parentDataProperty;\n      var _ref2$rootData = _ref2.rootData,\n      rootData = _ref2$rootData === void 0 ? data : _ref2$rootData;\n\n  var vErrors = null;\n  var errors = 0;\n  var _errs0 = errors;\n  var valid0 = false;\n  var _errs1 = errors;\n  var _errs3 = errors;\n  var valid2 = false;\n  var _errs4 = errors;\n\n  if (errors === _errs4) {\n    if (typeof data === \"string\") {\n      if (func2(data) > 42) {\n        var err0 = {\n          instancePath: instancePath,\n          schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/maxLength\",\n          keyword: \"maxLength\",\n          params: {\n            limit: 42\n          },\n          message: \"must NOT have more than 42 characters\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      } else {\n        if (func2(data) < 1) {\n          var err1 = {\n            instancePath: instancePath,\n            schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/minLength\",\n            keyword: \"minLength\",\n            params: {\n              limit: 1\n            },\n            message: \"must NOT have fewer than 1 characters\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err1];\n          } else {\n            vErrors.push(err1);\n          }\n\n          errors++;\n        }\n      }\n    } else {\n      var err2 = {\n        instancePath: instancePath,\n        schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/type\",\n        keyword: \"type\",\n        params: {\n          type: \"string\"\n        },\n        message: \"must be string\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err2];\n      } else {\n        vErrors.push(err2);\n      }\n\n      errors++;\n    }\n  }\n\n  var _valid1 = _errs4 === errors;\n\n  valid2 = valid2 || _valid1;\n\n  if (!valid2) {\n    var _errs6 = errors;\n\n    if (typeof data !== \"boolean\") {\n      var err3 = {\n        instancePath: instancePath,\n        schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/1/type\",\n        keyword: \"type\",\n        params: {\n          type: \"boolean\"\n        },\n        message: \"must be boolean\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err3];\n      } else {\n        vErrors.push(err3);\n      }\n\n      errors++;\n    }\n\n    var _valid1 = _errs6 === errors;\n\n    valid2 = valid2 || _valid1;\n\n    if (!valid2) {\n      var _errs8 = errors;\n\n      if (!(typeof data == \"number\" && isFinite(data))) {\n        var err4 = {\n          instancePath: instancePath,\n          schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/2/type\",\n          keyword: \"type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"must be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err4];\n        } else {\n          vErrors.push(err4);\n        }\n\n        errors++;\n      }\n\n      var _valid1 = _errs8 === errors;\n\n      valid2 = valid2 || _valid1;\n\n      if (!valid2) {\n        var _errs10 = errors;\n\n        if (data !== null) {\n          var err5 = {\n            instancePath: instancePath,\n            schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/3/type\",\n            keyword: \"type\",\n            params: {\n              type: \"null\"\n            },\n            message: \"must be null\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err5];\n          } else {\n            vErrors.push(err5);\n          }\n\n          errors++;\n        }\n\n        var _valid1 = _errs10 === errors;\n\n        valid2 = valid2 || _valid1;\n      }\n    }\n  }\n\n  if (!valid2) {\n    var err6 = {\n      instancePath: instancePath,\n      schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf\",\n      keyword: \"anyOf\",\n      params: {},\n      message: \"must match a schema in anyOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err6];\n    } else {\n      vErrors.push(err6);\n    }\n\n    errors++;\n  } else {\n    errors = _errs3;\n\n    if (vErrors !== null) {\n      if (_errs3) {\n        vErrors.length = _errs3;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  var _valid0 = _errs1 === errors;\n\n  valid0 = valid0 || _valid0;\n\n  if (!valid0) {\n    var _errs12 = errors;\n\n    if (errors === _errs12) {\n      if (data && _typeof(data) == \"object\" && !Array.isArray(data)) {\n        if (Object.keys(data).length > 10) {\n          var err7 = {\n            instancePath: instancePath,\n            schemaPath: \"#/anyOf/1/maxProperties\",\n            keyword: \"maxProperties\",\n            params: {\n              limit: 10\n            },\n            message: \"must NOT have more than 10 properties\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err7];\n          } else {\n            vErrors.push(err7);\n          }\n\n          errors++;\n        } else {\n          for (var key0 in data) {\n            var _errs14 = errors;\n            var _errs15 = errors;\n\n            if (errors === _errs15) {\n              if (typeof key0 === \"string\") {\n                if (func2(key0) > 40) {\n                  var err8 = {\n                    instancePath: instancePath,\n                    schemaPath: \"#/definitions/ExtensionIdentifier/maxLength\",\n                    keyword: \"maxLength\",\n                    params: {\n                      limit: 40\n                    },\n                    message: \"must NOT have more than 40 characters\",\n                    propertyName: key0\n                  };\n\n                  if (vErrors === null) {\n                    vErrors = [err8];\n                  } else {\n                    vErrors.push(err8);\n                  }\n\n                  errors++;\n                } else {\n                  if (func2(key0) < 1) {\n                    var err9 = {\n                      instancePath: instancePath,\n                      schemaPath: \"#/definitions/ExtensionIdentifier/minLength\",\n                      keyword: \"minLength\",\n                      params: {\n                        limit: 1\n                      },\n                      message: \"must NOT have fewer than 1 characters\",\n                      propertyName: key0\n                    };\n\n                    if (vErrors === null) {\n                      vErrors = [err9];\n                    } else {\n                      vErrors.push(err9);\n                    }\n\n                    errors++;\n                  } else {\n                    if (!pattern4.test(key0)) {\n                      var err10 = {\n                        instancePath: instancePath,\n                        schemaPath: \"#/definitions/ExtensionIdentifier/pattern\",\n                        keyword: \"pattern\",\n                        params: {\n                          pattern: \"^[\\\\w]+$\"\n                        },\n                        message: \"must match pattern \\\"\" + \"^[\\\\w]+$\" + \"\\\"\",\n                        propertyName: key0\n                      };\n\n                      if (vErrors === null) {\n                        vErrors = [err10];\n                      } else {\n                        vErrors.push(err10);\n                      }\n\n                      errors++;\n                    }\n                  }\n                }\n              } else {\n                var err11 = {\n                  instancePath: instancePath,\n                  schemaPath: \"#/definitions/ExtensionIdentifier/type\",\n                  keyword: \"type\",\n                  params: {\n                    type: \"string\"\n                  },\n                  message: \"must be string\",\n                  propertyName: key0\n                };\n\n                if (vErrors === null) {\n                  vErrors = [err11];\n                } else {\n                  vErrors.push(err11);\n                }\n\n                errors++;\n              }\n            }\n\n            var valid3 = _errs14 === errors;\n\n            if (!valid3) {\n              var err12 = {\n                instancePath: instancePath,\n                schemaPath: \"#/anyOf/1/propertyNames\",\n                keyword: \"propertyNames\",\n                params: {\n                  propertyName: key0\n                },\n                message: \"property name must be valid\"\n              };\n\n              if (vErrors === null) {\n                vErrors = [err12];\n              } else {\n                vErrors.push(err12);\n              }\n\n              errors++;\n              break;\n            }\n          }\n\n          if (valid3) {\n            for (var key1 in data) {\n              var _errs18 = errors;\n\n              if (!validate15(data[key1], {\n                instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                parentData: data,\n                parentDataProperty: key1,\n                rootData: rootData\n              })) {\n                vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);\n                errors = vErrors.length;\n              }\n\n              var valid5 = _errs18 === errors;\n\n              if (!valid5) {\n                break;\n              }\n            }\n          }\n        }\n      } else {\n        var err13 = {\n          instancePath: instancePath,\n          schemaPath: \"#/anyOf/1/type\",\n          keyword: \"type\",\n          params: {\n            type: \"object\"\n          },\n          message: \"must be object\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err13];\n        } else {\n          vErrors.push(err13);\n        }\n\n        errors++;\n      }\n    }\n\n    var _valid0 = _errs12 === errors;\n\n    valid0 = valid0 || _valid0;\n  }\n\n  if (!valid0) {\n    var err14 = {\n      instancePath: instancePath,\n      schemaPath: \"#/anyOf\",\n      keyword: \"anyOf\",\n      params: {},\n      message: \"must match a schema in anyOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err14];\n    } else {\n      vErrors.push(err14);\n    }\n\n    errors++;\n    validate14.errors = vErrors;\n    return false;\n  } else {\n    errors = _errs0;\n\n    if (vErrors !== null) {\n      if (_errs0) {\n        vErrors.length = _errs0;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  validate14.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate13(data) {\n  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref3$instancePath = _ref3.instancePath,\n      instancePath = _ref3$instancePath === void 0 ? \"\" : _ref3$instancePath;\n      _ref3.parentData;\n      _ref3.parentDataProperty;\n      var _ref3$rootData = _ref3.rootData,\n      rootData = _ref3$rootData === void 0 ? data : _ref3$rootData;\n\n  var vErrors = null;\n  var errors = 0;\n  var _errs0 = errors;\n  var valid0 = false;\n  var _errs1 = errors;\n  var _errs3 = errors;\n  var valid2 = false;\n  var _errs4 = errors;\n\n  if (errors === _errs4) {\n    if (typeof data === \"string\") {\n      if (func2(data) > 42) {\n        var err0 = {\n          instancePath: instancePath,\n          schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/maxLength\",\n          keyword: \"maxLength\",\n          params: {\n            limit: 42\n          },\n          message: \"must NOT have more than 42 characters\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      } else {\n        if (func2(data) < 1) {\n          var err1 = {\n            instancePath: instancePath,\n            schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/minLength\",\n            keyword: \"minLength\",\n            params: {\n              limit: 1\n            },\n            message: \"must NOT have fewer than 1 characters\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err1];\n          } else {\n            vErrors.push(err1);\n          }\n\n          errors++;\n        }\n      }\n    } else {\n      var err2 = {\n        instancePath: instancePath,\n        schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/type\",\n        keyword: \"type\",\n        params: {\n          type: \"string\"\n        },\n        message: \"must be string\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err2];\n      } else {\n        vErrors.push(err2);\n      }\n\n      errors++;\n    }\n  }\n\n  var _valid1 = _errs4 === errors;\n\n  valid2 = valid2 || _valid1;\n\n  if (!valid2) {\n    var _errs6 = errors;\n\n    if (typeof data !== \"boolean\") {\n      var err3 = {\n        instancePath: instancePath,\n        schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/1/type\",\n        keyword: \"type\",\n        params: {\n          type: \"boolean\"\n        },\n        message: \"must be boolean\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err3];\n      } else {\n        vErrors.push(err3);\n      }\n\n      errors++;\n    }\n\n    var _valid1 = _errs6 === errors;\n\n    valid2 = valid2 || _valid1;\n\n    if (!valid2) {\n      var _errs8 = errors;\n\n      if (!(typeof data == \"number\" && isFinite(data))) {\n        var err4 = {\n          instancePath: instancePath,\n          schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/2/type\",\n          keyword: \"type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"must be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err4];\n        } else {\n          vErrors.push(err4);\n        }\n\n        errors++;\n      }\n\n      var _valid1 = _errs8 === errors;\n\n      valid2 = valid2 || _valid1;\n\n      if (!valid2) {\n        var _errs10 = errors;\n\n        if (data !== null) {\n          var err5 = {\n            instancePath: instancePath,\n            schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/3/type\",\n            keyword: \"type\",\n            params: {\n              type: \"null\"\n            },\n            message: \"must be null\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err5];\n          } else {\n            vErrors.push(err5);\n          }\n\n          errors++;\n        }\n\n        var _valid1 = _errs10 === errors;\n\n        valid2 = valid2 || _valid1;\n      }\n    }\n  }\n\n  if (!valid2) {\n    var err6 = {\n      instancePath: instancePath,\n      schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf\",\n      keyword: \"anyOf\",\n      params: {},\n      message: \"must match a schema in anyOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err6];\n    } else {\n      vErrors.push(err6);\n    }\n\n    errors++;\n  } else {\n    errors = _errs3;\n\n    if (vErrors !== null) {\n      if (_errs3) {\n        vErrors.length = _errs3;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  var _valid0 = _errs1 === errors;\n\n  valid0 = valid0 || _valid0;\n\n  if (!valid0) {\n    var _errs12 = errors;\n\n    if (errors === _errs12) {\n      if (data && _typeof(data) == \"object\" && !Array.isArray(data)) {\n        if (Object.keys(data).length > 10) {\n          var err7 = {\n            instancePath: instancePath,\n            schemaPath: \"#/anyOf/1/maxProperties\",\n            keyword: \"maxProperties\",\n            params: {\n              limit: 10\n            },\n            message: \"must NOT have more than 10 properties\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err7];\n          } else {\n            vErrors.push(err7);\n          }\n\n          errors++;\n        } else {\n          for (var key0 in data) {\n            var _errs14 = errors;\n            var _errs15 = errors;\n\n            if (errors === _errs15) {\n              if (typeof key0 === \"string\") {\n                if (func2(key0) > 40) {\n                  var err8 = {\n                    instancePath: instancePath,\n                    schemaPath: \"#/definitions/ExtensionIdentifier/maxLength\",\n                    keyword: \"maxLength\",\n                    params: {\n                      limit: 40\n                    },\n                    message: \"must NOT have more than 40 characters\",\n                    propertyName: key0\n                  };\n\n                  if (vErrors === null) {\n                    vErrors = [err8];\n                  } else {\n                    vErrors.push(err8);\n                  }\n\n                  errors++;\n                } else {\n                  if (func2(key0) < 1) {\n                    var err9 = {\n                      instancePath: instancePath,\n                      schemaPath: \"#/definitions/ExtensionIdentifier/minLength\",\n                      keyword: \"minLength\",\n                      params: {\n                        limit: 1\n                      },\n                      message: \"must NOT have fewer than 1 characters\",\n                      propertyName: key0\n                    };\n\n                    if (vErrors === null) {\n                      vErrors = [err9];\n                    } else {\n                      vErrors.push(err9);\n                    }\n\n                    errors++;\n                  } else {\n                    if (!pattern4.test(key0)) {\n                      var err10 = {\n                        instancePath: instancePath,\n                        schemaPath: \"#/definitions/ExtensionIdentifier/pattern\",\n                        keyword: \"pattern\",\n                        params: {\n                          pattern: \"^[\\\\w]+$\"\n                        },\n                        message: \"must match pattern \\\"\" + \"^[\\\\w]+$\" + \"\\\"\",\n                        propertyName: key0\n                      };\n\n                      if (vErrors === null) {\n                        vErrors = [err10];\n                      } else {\n                        vErrors.push(err10);\n                      }\n\n                      errors++;\n                    }\n                  }\n                }\n              } else {\n                var err11 = {\n                  instancePath: instancePath,\n                  schemaPath: \"#/definitions/ExtensionIdentifier/type\",\n                  keyword: \"type\",\n                  params: {\n                    type: \"string\"\n                  },\n                  message: \"must be string\",\n                  propertyName: key0\n                };\n\n                if (vErrors === null) {\n                  vErrors = [err11];\n                } else {\n                  vErrors.push(err11);\n                }\n\n                errors++;\n              }\n            }\n\n            var valid3 = _errs14 === errors;\n\n            if (!valid3) {\n              var err12 = {\n                instancePath: instancePath,\n                schemaPath: \"#/anyOf/1/propertyNames\",\n                keyword: \"propertyNames\",\n                params: {\n                  propertyName: key0\n                },\n                message: \"property name must be valid\"\n              };\n\n              if (vErrors === null) {\n                vErrors = [err12];\n              } else {\n                vErrors.push(err12);\n              }\n\n              errors++;\n              break;\n            }\n          }\n\n          if (valid3) {\n            for (var key1 in data) {\n              var _errs18 = errors;\n\n              if (!validate14(data[key1], {\n                instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                parentData: data,\n                parentDataProperty: key1,\n                rootData: rootData\n              })) {\n                vErrors = vErrors === null ? validate14.errors : vErrors.concat(validate14.errors);\n                errors = vErrors.length;\n              }\n\n              var valid5 = _errs18 === errors;\n\n              if (!valid5) {\n                break;\n              }\n            }\n          }\n        }\n      } else {\n        var err13 = {\n          instancePath: instancePath,\n          schemaPath: \"#/anyOf/1/type\",\n          keyword: \"type\",\n          params: {\n            type: \"object\"\n          },\n          message: \"must be object\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err13];\n        } else {\n          vErrors.push(err13);\n        }\n\n        errors++;\n      }\n    }\n\n    var _valid0 = _errs12 === errors;\n\n    valid0 = valid0 || _valid0;\n  }\n\n  if (!valid0) {\n    var err14 = {\n      instancePath: instancePath,\n      schemaPath: \"#/anyOf\",\n      keyword: \"anyOf\",\n      params: {},\n      message: \"must match a schema in anyOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err14];\n    } else {\n      vErrors.push(err14);\n    }\n\n    errors++;\n    validate13.errors = vErrors;\n    return false;\n  } else {\n    errors = _errs0;\n\n    if (vErrors !== null) {\n      if (_errs0) {\n        vErrors.length = _errs0;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  validate13.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate12(data) {\n  var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref4$instancePath = _ref4.instancePath,\n      instancePath = _ref4$instancePath === void 0 ? \"\" : _ref4$instancePath;\n      _ref4.parentData;\n      _ref4.parentDataProperty;\n      var _ref4$rootData = _ref4.rootData,\n      rootData = _ref4$rootData === void 0 ? data : _ref4$rootData;\n\n  var vErrors = null;\n  var errors = 0;\n\n  if (errors === 0) {\n    if (data && _typeof(data) == \"object\" && !Array.isArray(data)) {\n      if (Object.keys(data).length > 10) {\n        validate12.errors = [{\n          instancePath: instancePath,\n          schemaPath: \"#/maxProperties\",\n          keyword: \"maxProperties\",\n          params: {\n            limit: 10\n          },\n          message: \"must NOT have more than 10 properties\"\n        }];\n        return false;\n      } else {\n        for (var key0 in data) {\n          var _errs1 = errors;\n          var _errs2 = errors;\n\n          if (errors === _errs2) {\n            if (typeof key0 === \"string\") {\n              if (func2(key0) > 40) {\n                var err0 = {\n                  instancePath: instancePath,\n                  schemaPath: \"#/definitions/ExtensionIdentifier/maxLength\",\n                  keyword: \"maxLength\",\n                  params: {\n                    limit: 40\n                  },\n                  message: \"must NOT have more than 40 characters\",\n                  propertyName: key0\n                };\n\n                if (vErrors === null) {\n                  vErrors = [err0];\n                } else {\n                  vErrors.push(err0);\n                }\n\n                errors++;\n              } else {\n                if (func2(key0) < 1) {\n                  var err1 = {\n                    instancePath: instancePath,\n                    schemaPath: \"#/definitions/ExtensionIdentifier/minLength\",\n                    keyword: \"minLength\",\n                    params: {\n                      limit: 1\n                    },\n                    message: \"must NOT have fewer than 1 characters\",\n                    propertyName: key0\n                  };\n\n                  if (vErrors === null) {\n                    vErrors = [err1];\n                  } else {\n                    vErrors.push(err1);\n                  }\n\n                  errors++;\n                } else {\n                  if (!pattern4.test(key0)) {\n                    var err2 = {\n                      instancePath: instancePath,\n                      schemaPath: \"#/definitions/ExtensionIdentifier/pattern\",\n                      keyword: \"pattern\",\n                      params: {\n                        pattern: \"^[\\\\w]+$\"\n                      },\n                      message: \"must match pattern \\\"\" + \"^[\\\\w]+$\" + \"\\\"\",\n                      propertyName: key0\n                    };\n\n                    if (vErrors === null) {\n                      vErrors = [err2];\n                    } else {\n                      vErrors.push(err2);\n                    }\n\n                    errors++;\n                  }\n                }\n              }\n            } else {\n              var err3 = {\n                instancePath: instancePath,\n                schemaPath: \"#/definitions/ExtensionIdentifier/type\",\n                keyword: \"type\",\n                params: {\n                  type: \"string\"\n                },\n                message: \"must be string\",\n                propertyName: key0\n              };\n\n              if (vErrors === null) {\n                vErrors = [err3];\n              } else {\n                vErrors.push(err3);\n              }\n\n              errors++;\n            }\n          }\n\n          var valid0 = _errs1 === errors;\n\n          if (!valid0) {\n            var err4 = {\n              instancePath: instancePath,\n              schemaPath: \"#/propertyNames\",\n              keyword: \"propertyNames\",\n              params: {\n                propertyName: key0\n              },\n              message: \"property name must be valid\"\n            };\n\n            if (vErrors === null) {\n              vErrors = [err4];\n            } else {\n              vErrors.push(err4);\n            }\n\n            errors++;\n            validate12.errors = vErrors;\n            return false;\n          }\n        }\n\n        if (valid0) {\n          for (var key1 in data) {\n            var _errs5 = errors;\n\n            if (!validate13(data[key1], {\n              instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n              parentData: data,\n              parentDataProperty: key1,\n              rootData: rootData\n            })) {\n              vErrors = vErrors === null ? validate13.errors : vErrors.concat(validate13.errors);\n              errors = vErrors.length;\n            }\n\n            var valid2 = _errs5 === errors;\n\n            if (!valid2) {\n              break;\n            }\n          }\n        }\n      }\n    } else {\n      validate12.errors = [{\n        instancePath: instancePath,\n        schemaPath: \"#/type\",\n        keyword: \"type\",\n        params: {\n          type: \"object\"\n        },\n        message: \"must be object\"\n      }];\n      return false;\n    }\n  }\n\n  validate12.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate11(data) {\n  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref5$instancePath = _ref5.instancePath,\n      instancePath = _ref5$instancePath === void 0 ? \"\" : _ref5$instancePath;\n      _ref5.parentData;\n      _ref5.parentDataProperty;\n      var _ref5$rootData = _ref5.rootData,\n      rootData = _ref5$rootData === void 0 ? data : _ref5$rootData;\n\n  var vErrors = null;\n  var errors = 0;\n\n  if (errors === 0) {\n    if (data && _typeof(data) == \"object\" && !Array.isArray(data)) {\n      var missing0;\n\n      if (data.chainId === undefined && (missing0 = \"chainId\") || data.address === undefined && (missing0 = \"address\") || data.decimals === undefined && (missing0 = \"decimals\") || data.name === undefined && (missing0 = \"name\") || data.symbol === undefined && (missing0 = \"symbol\")) {\n        validate11.errors = [{\n          instancePath: instancePath,\n          schemaPath: \"#/required\",\n          keyword: \"required\",\n          params: {\n            missingProperty: missing0\n          },\n          message: \"must have required property '\" + missing0 + \"'\"\n        }];\n        return false;\n      } else {\n        var _errs1 = errors;\n\n        for (var key0 in data) {\n          if (!(key0 === \"chainId\" || key0 === \"address\" || key0 === \"decimals\" || key0 === \"name\" || key0 === \"symbol\" || key0 === \"logoURI\" || key0 === \"tags\" || key0 === \"extensions\")) {\n            validate11.errors = [{\n              instancePath: instancePath,\n              schemaPath: \"#/additionalProperties\",\n              keyword: \"additionalProperties\",\n              params: {\n                additionalProperty: key0\n              },\n              message: \"must NOT have additional properties\"\n            }];\n            return false;\n          }\n        }\n\n        if (_errs1 === errors) {\n          if (data.chainId !== undefined) {\n            var data0 = data.chainId;\n            var _errs2 = errors;\n\n            if (!(typeof data0 == \"number\" && !(data0 % 1) && !isNaN(data0) && isFinite(data0))) {\n              validate11.errors = [{\n                instancePath: instancePath + \"/chainId\",\n                schemaPath: \"#/properties/chainId/type\",\n                keyword: \"type\",\n                params: {\n                  type: \"integer\"\n                },\n                message: \"must be integer\"\n              }];\n              return false;\n            }\n\n            if (errors === _errs2) {\n              if (typeof data0 == \"number\" && isFinite(data0)) {\n                if (data0 < 1 || isNaN(data0)) {\n                  validate11.errors = [{\n                    instancePath: instancePath + \"/chainId\",\n                    schemaPath: \"#/properties/chainId/minimum\",\n                    keyword: \"minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 1\n                    },\n                    message: \"must be >= 1\"\n                  }];\n                  return false;\n                }\n              }\n            }\n\n            var valid0 = _errs2 === errors;\n          } else {\n            var valid0 = true;\n          }\n\n          if (valid0) {\n            if (data.address !== undefined) {\n              var data1 = data.address;\n              var _errs4 = errors;\n\n              if (errors === _errs4) {\n                if (typeof data1 === \"string\") {\n                  if (!pattern1.test(data1)) {\n                    validate11.errors = [{\n                      instancePath: instancePath + \"/address\",\n                      schemaPath: \"#/properties/address/pattern\",\n                      keyword: \"pattern\",\n                      params: {\n                        pattern: \"^0x[a-fA-F0-9]{40}$\"\n                      },\n                      message: \"must match pattern \\\"\" + \"^0x[a-fA-F0-9]{40}$\" + \"\\\"\"\n                    }];\n                    return false;\n                  }\n                } else {\n                  validate11.errors = [{\n                    instancePath: instancePath + \"/address\",\n                    schemaPath: \"#/properties/address/type\",\n                    keyword: \"type\",\n                    params: {\n                      type: \"string\"\n                    },\n                    message: \"must be string\"\n                  }];\n                  return false;\n                }\n              }\n\n              var valid0 = _errs4 === errors;\n            } else {\n              var valid0 = true;\n            }\n\n            if (valid0) {\n              if (data.decimals !== undefined) {\n                var data2 = data.decimals;\n                var _errs6 = errors;\n\n                if (!(typeof data2 == \"number\" && !(data2 % 1) && !isNaN(data2) && isFinite(data2))) {\n                  validate11.errors = [{\n                    instancePath: instancePath + \"/decimals\",\n                    schemaPath: \"#/properties/decimals/type\",\n                    keyword: \"type\",\n                    params: {\n                      type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                  }];\n                  return false;\n                }\n\n                if (errors === _errs6) {\n                  if (typeof data2 == \"number\" && isFinite(data2)) {\n                    if (data2 > 255 || isNaN(data2)) {\n                      validate11.errors = [{\n                        instancePath: instancePath + \"/decimals\",\n                        schemaPath: \"#/properties/decimals/maximum\",\n                        keyword: \"maximum\",\n                        params: {\n                          comparison: \"<=\",\n                          limit: 255\n                        },\n                        message: \"must be <= 255\"\n                      }];\n                      return false;\n                    } else {\n                      if (data2 < 0 || isNaN(data2)) {\n                        validate11.errors = [{\n                          instancePath: instancePath + \"/decimals\",\n                          schemaPath: \"#/properties/decimals/minimum\",\n                          keyword: \"minimum\",\n                          params: {\n                            comparison: \">=\",\n                            limit: 0\n                          },\n                          message: \"must be >= 0\"\n                        }];\n                        return false;\n                      }\n                    }\n                  }\n                }\n\n                var valid0 = _errs6 === errors;\n              } else {\n                var valid0 = true;\n              }\n\n              if (valid0) {\n                if (data.name !== undefined) {\n                  var data3 = data.name;\n                  var _errs8 = errors;\n\n                  if (errors === _errs8) {\n                    if (typeof data3 === \"string\") {\n                      if (func2(data3) > 40) {\n                        validate11.errors = [{\n                          instancePath: instancePath + \"/name\",\n                          schemaPath: \"#/properties/name/maxLength\",\n                          keyword: \"maxLength\",\n                          params: {\n                            limit: 40\n                          },\n                          message: \"must NOT have more than 40 characters\"\n                        }];\n                        return false;\n                      } else {\n                        if (func2(data3) < 1) {\n                          validate11.errors = [{\n                            instancePath: instancePath + \"/name\",\n                            schemaPath: \"#/properties/name/minLength\",\n                            keyword: \"minLength\",\n                            params: {\n                              limit: 1\n                            },\n                            message: \"must NOT have fewer than 1 characters\"\n                          }];\n                          return false;\n                        } else {\n                          if (!pattern2.test(data3)) {\n                            validate11.errors = [{\n                              instancePath: instancePath + \"/name\",\n                              schemaPath: \"#/properties/name/pattern\",\n                              keyword: \"pattern\",\n                              params: {\n                                pattern: \"^[ \\\\w.'+\\\\-%/À-ÖØ-öø-ÿ:&\\\\[\\\\]\\\\(\\\\)]+$\"\n                              },\n                              message: \"must match pattern \\\"\" + \"^[ \\\\w.'+\\\\-%/À-ÖØ-öø-ÿ:&\\\\[\\\\]\\\\(\\\\)]+$\" + \"\\\"\"\n                            }];\n                            return false;\n                          }\n                        }\n                      }\n                    } else {\n                      validate11.errors = [{\n                        instancePath: instancePath + \"/name\",\n                        schemaPath: \"#/properties/name/type\",\n                        keyword: \"type\",\n                        params: {\n                          type: \"string\"\n                        },\n                        message: \"must be string\"\n                      }];\n                      return false;\n                    }\n                  }\n\n                  var valid0 = _errs8 === errors;\n                } else {\n                  var valid0 = true;\n                }\n\n                if (valid0) {\n                  if (data.symbol !== undefined) {\n                    var data4 = data.symbol;\n                    var _errs10 = errors;\n\n                    if (errors === _errs10) {\n                      if (typeof data4 === \"string\") {\n                        if (func2(data4) > 20) {\n                          validate11.errors = [{\n                            instancePath: instancePath + \"/symbol\",\n                            schemaPath: \"#/properties/symbol/maxLength\",\n                            keyword: \"maxLength\",\n                            params: {\n                              limit: 20\n                            },\n                            message: \"must NOT have more than 20 characters\"\n                          }];\n                          return false;\n                        } else {\n                          if (func2(data4) < 1) {\n                            validate11.errors = [{\n                              instancePath: instancePath + \"/symbol\",\n                              schemaPath: \"#/properties/symbol/minLength\",\n                              keyword: \"minLength\",\n                              params: {\n                                limit: 1\n                              },\n                              message: \"must NOT have fewer than 1 characters\"\n                            }];\n                            return false;\n                          } else {\n                            if (!pattern3.test(data4)) {\n                              validate11.errors = [{\n                                instancePath: instancePath + \"/symbol\",\n                                schemaPath: \"#/properties/symbol/pattern\",\n                                keyword: \"pattern\",\n                                params: {\n                                  pattern: \"^[a-zA-Z0-9+\\\\-%/$.]+$\"\n                                },\n                                message: \"must match pattern \\\"\" + \"^[a-zA-Z0-9+\\\\-%/$.]+$\" + \"\\\"\"\n                              }];\n                              return false;\n                            }\n                          }\n                        }\n                      } else {\n                        validate11.errors = [{\n                          instancePath: instancePath + \"/symbol\",\n                          schemaPath: \"#/properties/symbol/type\",\n                          keyword: \"type\",\n                          params: {\n                            type: \"string\"\n                          },\n                          message: \"must be string\"\n                        }];\n                        return false;\n                      }\n                    }\n\n                    var valid0 = _errs10 === errors;\n                  } else {\n                    var valid0 = true;\n                  }\n\n                  if (valid0) {\n                    if (data.logoURI !== undefined) {\n                      var data5 = data.logoURI;\n                      var _errs12 = errors;\n\n                      if (errors === _errs12) {\n                        if (errors === _errs12) {\n                          if (typeof data5 === \"string\") {\n                            if (!formats2(data5)) {\n                              validate11.errors = [{\n                                instancePath: instancePath + \"/logoURI\",\n                                schemaPath: \"#/properties/logoURI/format\",\n                                keyword: \"format\",\n                                params: {\n                                  format: \"uri\"\n                                },\n                                message: \"must match format \\\"\" + \"uri\" + \"\\\"\"\n                              }];\n                              return false;\n                            }\n                          } else {\n                            validate11.errors = [{\n                              instancePath: instancePath + \"/logoURI\",\n                              schemaPath: \"#/properties/logoURI/type\",\n                              keyword: \"type\",\n                              params: {\n                                type: \"string\"\n                              },\n                              message: \"must be string\"\n                            }];\n                            return false;\n                          }\n                        }\n                      }\n\n                      var valid0 = _errs12 === errors;\n                    } else {\n                      var valid0 = true;\n                    }\n\n                    if (valid0) {\n                      if (data.tags !== undefined) {\n                        var data6 = data.tags;\n                        var _errs14 = errors;\n\n                        if (errors === _errs14) {\n                          if (Array.isArray(data6)) {\n                            if (data6.length > 10) {\n                              validate11.errors = [{\n                                instancePath: instancePath + \"/tags\",\n                                schemaPath: \"#/properties/tags/maxItems\",\n                                keyword: \"maxItems\",\n                                params: {\n                                  limit: 10\n                                },\n                                message: \"must NOT have more than 10 items\"\n                              }];\n                              return false;\n                            } else {\n                              var valid1 = true;\n                              var len0 = data6.length;\n\n                              for (var i0 = 0; i0 < len0; i0++) {\n                                var data7 = data6[i0];\n                                var _errs16 = errors;\n                                var _errs17 = errors;\n\n                                if (errors === _errs17) {\n                                  if (typeof data7 === \"string\") {\n                                    if (func2(data7) > 10) {\n                                      validate11.errors = [{\n                                        instancePath: instancePath + \"/tags/\" + i0,\n                                        schemaPath: \"#/definitions/TagIdentifier/maxLength\",\n                                        keyword: \"maxLength\",\n                                        params: {\n                                          limit: 10\n                                        },\n                                        message: \"must NOT have more than 10 characters\"\n                                      }];\n                                      return false;\n                                    } else {\n                                      if (func2(data7) < 1) {\n                                        validate11.errors = [{\n                                          instancePath: instancePath + \"/tags/\" + i0,\n                                          schemaPath: \"#/definitions/TagIdentifier/minLength\",\n                                          keyword: \"minLength\",\n                                          params: {\n                                            limit: 1\n                                          },\n                                          message: \"must NOT have fewer than 1 characters\"\n                                        }];\n                                        return false;\n                                      } else {\n                                        if (!pattern4.test(data7)) {\n                                          validate11.errors = [{\n                                            instancePath: instancePath + \"/tags/\" + i0,\n                                            schemaPath: \"#/definitions/TagIdentifier/pattern\",\n                                            keyword: \"pattern\",\n                                            params: {\n                                              pattern: \"^[\\\\w]+$\"\n                                            },\n                                            message: \"must match pattern \\\"\" + \"^[\\\\w]+$\" + \"\\\"\"\n                                          }];\n                                          return false;\n                                        }\n                                      }\n                                    }\n                                  } else {\n                                    validate11.errors = [{\n                                      instancePath: instancePath + \"/tags/\" + i0,\n                                      schemaPath: \"#/definitions/TagIdentifier/type\",\n                                      keyword: \"type\",\n                                      params: {\n                                        type: \"string\"\n                                      },\n                                      message: \"must be string\"\n                                    }];\n                                    return false;\n                                  }\n                                }\n\n                                var valid1 = _errs16 === errors;\n\n                                if (!valid1) {\n                                  break;\n                                }\n                              }\n                            }\n                          } else {\n                            validate11.errors = [{\n                              instancePath: instancePath + \"/tags\",\n                              schemaPath: \"#/properties/tags/type\",\n                              keyword: \"type\",\n                              params: {\n                                type: \"array\"\n                              },\n                              message: \"must be array\"\n                            }];\n                            return false;\n                          }\n                        }\n\n                        var valid0 = _errs14 === errors;\n                      } else {\n                        var valid0 = true;\n                      }\n\n                      if (valid0) {\n                        if (data.extensions !== undefined) {\n                          var _errs19 = errors;\n\n                          if (!validate12(data.extensions, {\n                            instancePath: instancePath + \"/extensions\",\n                            parentData: data,\n                            parentDataProperty: \"extensions\",\n                            rootData: rootData\n                          })) {\n                            vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);\n                            errors = vErrors.length;\n                          }\n\n                          var valid0 = _errs19 === errors;\n                        } else {\n                          var valid0 = true;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    } else {\n      validate11.errors = [{\n        instancePath: instancePath,\n        schemaPath: \"#/type\",\n        keyword: \"type\",\n        params: {\n          type: \"object\"\n        },\n        message: \"must be object\"\n      }];\n      return false;\n    }\n  }\n\n  validate11.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate10(data) {\n  var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref6$instancePath = _ref6.instancePath,\n      instancePath = _ref6$instancePath === void 0 ? \"\" : _ref6$instancePath;\n      _ref6.parentData;\n      _ref6.parentDataProperty;\n      var _ref6$rootData = _ref6.rootData,\n      rootData = _ref6$rootData === void 0 ? data : _ref6$rootData;\n  var vErrors = null;\n  var errors = 0;\n\n  if (errors === 0) {\n    if (data && _typeof(data) == \"object\" && !Array.isArray(data)) {\n      var missing0;\n\n      if (data.tokens === undefined && (missing0 = \"tokens\")) {\n        validate10.errors = [{\n          instancePath: instancePath,\n          schemaPath: \"#/required\",\n          keyword: \"required\",\n          params: {\n            missingProperty: missing0\n          },\n          message: \"must have required property '\" + missing0 + \"'\"\n        }];\n        return false;\n      } else {\n        var _errs1 = errors;\n\n        for (var key0 in data) {\n          if (!(key0 === \"name\" || key0 === \"timestamp\" || key0 === \"version\" || key0 === \"tokens\" || key0 === \"keywords\" || key0 === \"tags\" || key0 === \"logoURI\")) {\n            validate10.errors = [{\n              instancePath: instancePath,\n              schemaPath: \"#/additionalProperties\",\n              keyword: \"additionalProperties\",\n              params: {\n                additionalProperty: key0\n              },\n              message: \"must NOT have additional properties\"\n            }];\n            return false;\n          }\n        }\n\n        if (_errs1 === errors) {\n          if (data.name !== undefined) {\n            var data0 = data.name;\n            var _errs2 = errors;\n\n            if (errors === _errs2) {\n              if (typeof data0 === \"string\") {\n                if (func2(data0) > 30) {\n                  validate10.errors = [{\n                    instancePath: instancePath + \"/name\",\n                    schemaPath: \"#/properties/name/maxLength\",\n                    keyword: \"maxLength\",\n                    params: {\n                      limit: 30\n                    },\n                    message: \"must NOT have more than 30 characters\"\n                  }];\n                  return false;\n                } else {\n                  if (func2(data0) < 1) {\n                    validate10.errors = [{\n                      instancePath: instancePath + \"/name\",\n                      schemaPath: \"#/properties/name/minLength\",\n                      keyword: \"minLength\",\n                      params: {\n                        limit: 1\n                      },\n                      message: \"must NOT have fewer than 1 characters\"\n                    }];\n                    return false;\n                  } else {\n                    if (!pattern0.test(data0)) {\n                      validate10.errors = [{\n                        instancePath: instancePath + \"/name\",\n                        schemaPath: \"#/properties/name/pattern\",\n                        keyword: \"pattern\",\n                        params: {\n                          pattern: \"^[\\\\w ]+$\"\n                        },\n                        message: \"must match pattern \\\"\" + \"^[\\\\w ]+$\" + \"\\\"\"\n                      }];\n                      return false;\n                    }\n                  }\n                }\n              } else {\n                validate10.errors = [{\n                  instancePath: instancePath + \"/name\",\n                  schemaPath: \"#/properties/name/type\",\n                  keyword: \"type\",\n                  params: {\n                    type: \"string\"\n                  },\n                  message: \"must be string\"\n                }];\n                return false;\n              }\n            }\n\n            var valid0 = _errs2 === errors;\n          } else {\n            var valid0 = true;\n          }\n\n          if (valid0) {\n            if (data.timestamp !== undefined) {\n              var data1 = data.timestamp;\n              var _errs4 = errors;\n\n              if (errors === _errs4) {\n                if (errors === _errs4) {\n                  if (typeof data1 === \"string\") {\n                    if (!formats0.validate(data1)) {\n                      validate10.errors = [{\n                        instancePath: instancePath + \"/timestamp\",\n                        schemaPath: \"#/properties/timestamp/format\",\n                        keyword: \"format\",\n                        params: {\n                          format: \"date-time\"\n                        },\n                        message: \"must match format \\\"\" + \"date-time\" + \"\\\"\"\n                      }];\n                      return false;\n                    }\n                  } else {\n                    validate10.errors = [{\n                      instancePath: instancePath + \"/timestamp\",\n                      schemaPath: \"#/properties/timestamp/type\",\n                      keyword: \"type\",\n                      params: {\n                        type: \"string\"\n                      },\n                      message: \"must be string\"\n                    }];\n                    return false;\n                  }\n                }\n              }\n\n              var valid0 = _errs4 === errors;\n            } else {\n              var valid0 = true;\n            }\n\n            if (valid0) {\n              if (data.version !== undefined) {\n                var data2 = data.version;\n                var _errs6 = errors;\n                var _errs7 = errors;\n\n                if (errors === _errs7) {\n                  if (data2 && _typeof(data2) == \"object\" && !Array.isArray(data2)) {\n                    var missing1;\n\n                    if (data2.major === undefined && (missing1 = \"major\") || data2.minor === undefined && (missing1 = \"minor\") || data2.patch === undefined && (missing1 = \"patch\")) {\n                      validate10.errors = [{\n                        instancePath: instancePath + \"/version\",\n                        schemaPath: \"#/definitions/Version/required\",\n                        keyword: \"required\",\n                        params: {\n                          missingProperty: missing1\n                        },\n                        message: \"must have required property '\" + missing1 + \"'\"\n                      }];\n                      return false;\n                    } else {\n                      var _errs9 = errors;\n\n                      for (var key1 in data2) {\n                        if (!(key1 === \"major\" || key1 === \"minor\" || key1 === \"patch\")) {\n                          validate10.errors = [{\n                            instancePath: instancePath + \"/version\",\n                            schemaPath: \"#/definitions/Version/additionalProperties\",\n                            keyword: \"additionalProperties\",\n                            params: {\n                              additionalProperty: key1\n                            },\n                            message: \"must NOT have additional properties\"\n                          }];\n                          return false;\n                        }\n                      }\n\n                      if (_errs9 === errors) {\n                        if (data2.major !== undefined) {\n                          var data3 = data2.major;\n                          var _errs10 = errors;\n\n                          if (!(typeof data3 == \"number\" && !(data3 % 1) && !isNaN(data3) && isFinite(data3))) {\n                            validate10.errors = [{\n                              instancePath: instancePath + \"/version/major\",\n                              schemaPath: \"#/definitions/Version/properties/major/type\",\n                              keyword: \"type\",\n                              params: {\n                                type: \"integer\"\n                              },\n                              message: \"must be integer\"\n                            }];\n                            return false;\n                          }\n\n                          if (errors === _errs10) {\n                            if (typeof data3 == \"number\" && isFinite(data3)) {\n                              if (data3 < 0 || isNaN(data3)) {\n                                validate10.errors = [{\n                                  instancePath: instancePath + \"/version/major\",\n                                  schemaPath: \"#/definitions/Version/properties/major/minimum\",\n                                  keyword: \"minimum\",\n                                  params: {\n                                    comparison: \">=\",\n                                    limit: 0\n                                  },\n                                  message: \"must be >= 0\"\n                                }];\n                                return false;\n                              }\n                            }\n                          }\n\n                          var valid2 = _errs10 === errors;\n                        } else {\n                          var valid2 = true;\n                        }\n\n                        if (valid2) {\n                          if (data2.minor !== undefined) {\n                            var data4 = data2.minor;\n                            var _errs12 = errors;\n\n                            if (!(typeof data4 == \"number\" && !(data4 % 1) && !isNaN(data4) && isFinite(data4))) {\n                              validate10.errors = [{\n                                instancePath: instancePath + \"/version/minor\",\n                                schemaPath: \"#/definitions/Version/properties/minor/type\",\n                                keyword: \"type\",\n                                params: {\n                                  type: \"integer\"\n                                },\n                                message: \"must be integer\"\n                              }];\n                              return false;\n                            }\n\n                            if (errors === _errs12) {\n                              if (typeof data4 == \"number\" && isFinite(data4)) {\n                                if (data4 < 0 || isNaN(data4)) {\n                                  validate10.errors = [{\n                                    instancePath: instancePath + \"/version/minor\",\n                                    schemaPath: \"#/definitions/Version/properties/minor/minimum\",\n                                    keyword: \"minimum\",\n                                    params: {\n                                      comparison: \">=\",\n                                      limit: 0\n                                    },\n                                    message: \"must be >= 0\"\n                                  }];\n                                  return false;\n                                }\n                              }\n                            }\n\n                            var valid2 = _errs12 === errors;\n                          } else {\n                            var valid2 = true;\n                          }\n\n                          if (valid2) {\n                            if (data2.patch !== undefined) {\n                              var data5 = data2.patch;\n                              var _errs14 = errors;\n\n                              if (!(typeof data5 == \"number\" && !(data5 % 1) && !isNaN(data5) && isFinite(data5))) {\n                                validate10.errors = [{\n                                  instancePath: instancePath + \"/version/patch\",\n                                  schemaPath: \"#/definitions/Version/properties/patch/type\",\n                                  keyword: \"type\",\n                                  params: {\n                                    type: \"integer\"\n                                  },\n                                  message: \"must be integer\"\n                                }];\n                                return false;\n                              }\n\n                              if (errors === _errs14) {\n                                if (typeof data5 == \"number\" && isFinite(data5)) {\n                                  if (data5 < 0 || isNaN(data5)) {\n                                    validate10.errors = [{\n                                      instancePath: instancePath + \"/version/patch\",\n                                      schemaPath: \"#/definitions/Version/properties/patch/minimum\",\n                                      keyword: \"minimum\",\n                                      params: {\n                                        comparison: \">=\",\n                                        limit: 0\n                                      },\n                                      message: \"must be >= 0\"\n                                    }];\n                                    return false;\n                                  }\n                                }\n                              }\n\n                              var valid2 = _errs14 === errors;\n                            } else {\n                              var valid2 = true;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    validate10.errors = [{\n                      instancePath: instancePath + \"/version\",\n                      schemaPath: \"#/definitions/Version/type\",\n                      keyword: \"type\",\n                      params: {\n                        type: \"object\"\n                      },\n                      message: \"must be object\"\n                    }];\n                    return false;\n                  }\n                }\n\n                var valid0 = _errs6 === errors;\n              } else {\n                var valid0 = true;\n              }\n\n              if (valid0) {\n                if (data.tokens !== undefined) {\n                  var data6 = data.tokens;\n                  var _errs16 = errors;\n\n                  if (errors === _errs16) {\n                    if (Array.isArray(data6)) {\n                      if (data6.length > 10000) {\n                        validate10.errors = [{\n                          instancePath: instancePath + \"/tokens\",\n                          schemaPath: \"#/properties/tokens/maxItems\",\n                          keyword: \"maxItems\",\n                          params: {\n                            limit: 10000\n                          },\n                          message: \"must NOT have more than 10000 items\"\n                        }];\n                        return false;\n                      } else {\n                        if (data6.length < 1) {\n                          validate10.errors = [{\n                            instancePath: instancePath + \"/tokens\",\n                            schemaPath: \"#/properties/tokens/minItems\",\n                            keyword: \"minItems\",\n                            params: {\n                              limit: 1\n                            },\n                            message: \"must NOT have fewer than 1 items\"\n                          }];\n                          return false;\n                        } else {\n                          var valid3 = true;\n                          var len0 = data6.length;\n\n                          for (var i0 = 0; i0 < len0; i0++) {\n                            var _errs18 = errors;\n\n                            if (!validate11(data6[i0], {\n                              instancePath: instancePath + \"/tokens/\" + i0,\n                              parentData: data6,\n                              parentDataProperty: i0,\n                              rootData: rootData\n                            })) {\n                              vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);\n                              errors = vErrors.length;\n                            }\n\n                            var valid3 = _errs18 === errors;\n\n                            if (!valid3) {\n                              break;\n                            }\n                          }\n                        }\n                      }\n                    } else {\n                      validate10.errors = [{\n                        instancePath: instancePath + \"/tokens\",\n                        schemaPath: \"#/properties/tokens/type\",\n                        keyword: \"type\",\n                        params: {\n                          type: \"array\"\n                        },\n                        message: \"must be array\"\n                      }];\n                      return false;\n                    }\n                  }\n\n                  var valid0 = _errs16 === errors;\n                } else {\n                  var valid0 = true;\n                }\n\n                if (valid0) {\n                  if (data.keywords !== undefined) {\n                    var data8 = data.keywords;\n                    var _errs19 = errors;\n\n                    if (errors === _errs19) {\n                      if (Array.isArray(data8)) {\n                        if (data8.length > 20) {\n                          validate10.errors = [{\n                            instancePath: instancePath + \"/keywords\",\n                            schemaPath: \"#/properties/keywords/maxItems\",\n                            keyword: \"maxItems\",\n                            params: {\n                              limit: 20\n                            },\n                            message: \"must NOT have more than 20 items\"\n                          }];\n                          return false;\n                        } else {\n                          var valid4 = true;\n                          var len1 = data8.length;\n\n                          for (var i1 = 0; i1 < len1; i1++) {\n                            var data9 = data8[i1];\n                            var _errs21 = errors;\n\n                            if (errors === _errs21) {\n                              if (typeof data9 === \"string\") {\n                                if (func2(data9) > 20) {\n                                  validate10.errors = [{\n                                    instancePath: instancePath + \"/keywords/\" + i1,\n                                    schemaPath: \"#/properties/keywords/items/maxLength\",\n                                    keyword: \"maxLength\",\n                                    params: {\n                                      limit: 20\n                                    },\n                                    message: \"must NOT have more than 20 characters\"\n                                  }];\n                                  return false;\n                                } else {\n                                  if (func2(data9) < 1) {\n                                    validate10.errors = [{\n                                      instancePath: instancePath + \"/keywords/\" + i1,\n                                      schemaPath: \"#/properties/keywords/items/minLength\",\n                                      keyword: \"minLength\",\n                                      params: {\n                                        limit: 1\n                                      },\n                                      message: \"must NOT have fewer than 1 characters\"\n                                    }];\n                                    return false;\n                                  } else {\n                                    if (!pattern0.test(data9)) {\n                                      validate10.errors = [{\n                                        instancePath: instancePath + \"/keywords/\" + i1,\n                                        schemaPath: \"#/properties/keywords/items/pattern\",\n                                        keyword: \"pattern\",\n                                        params: {\n                                          pattern: \"^[\\\\w ]+$\"\n                                        },\n                                        message: \"must match pattern \\\"\" + \"^[\\\\w ]+$\" + \"\\\"\"\n                                      }];\n                                      return false;\n                                    }\n                                  }\n                                }\n                              } else {\n                                validate10.errors = [{\n                                  instancePath: instancePath + \"/keywords/\" + i1,\n                                  schemaPath: \"#/properties/keywords/items/type\",\n                                  keyword: \"type\",\n                                  params: {\n                                    type: \"string\"\n                                  },\n                                  message: \"must be string\"\n                                }];\n                                return false;\n                              }\n                            }\n\n                            var valid4 = _errs21 === errors;\n\n                            if (!valid4) {\n                              break;\n                            }\n                          }\n\n                          if (valid4) {\n                            var i2 = data8.length;\n                            var j0;\n\n                            if (i2 > 1) {\n                              var indices0 = {};\n\n                              for (; i2--;) {\n                                var item0 = data8[i2];\n\n                                if (typeof item0 !== \"string\") {\n                                  continue;\n                                }\n\n                                if (typeof indices0[item0] == \"number\") {\n                                  j0 = indices0[item0];\n                                  validate10.errors = [{\n                                    instancePath: instancePath + \"/keywords\",\n                                    schemaPath: \"#/properties/keywords/uniqueItems\",\n                                    keyword: \"uniqueItems\",\n                                    params: {\n                                      i: i2,\n                                      j: j0\n                                    },\n                                    message: \"must NOT have duplicate items (items ## \" + j0 + \" and \" + i2 + \" are identical)\"\n                                  }];\n                                  return false;\n                                }\n\n                                indices0[item0] = i2;\n                              }\n                            }\n                          }\n                        }\n                      } else {\n                        validate10.errors = [{\n                          instancePath: instancePath + \"/keywords\",\n                          schemaPath: \"#/properties/keywords/type\",\n                          keyword: \"type\",\n                          params: {\n                            type: \"array\"\n                          },\n                          message: \"must be array\"\n                        }];\n                        return false;\n                      }\n                    }\n\n                    var valid0 = _errs19 === errors;\n                  } else {\n                    var valid0 = true;\n                  }\n\n                  if (valid0) {\n                    if (data.tags !== undefined) {\n                      var data10 = data.tags;\n                      var _errs23 = errors;\n\n                      if (errors === _errs23) {\n                        if (data10 && _typeof(data10) == \"object\" && !Array.isArray(data10)) {\n                          if (Object.keys(data10).length > 20) {\n                            validate10.errors = [{\n                              instancePath: instancePath + \"/tags\",\n                              schemaPath: \"#/properties/tags/maxProperties\",\n                              keyword: \"maxProperties\",\n                              params: {\n                                limit: 20\n                              },\n                              message: \"must NOT have more than 20 properties\"\n                            }];\n                            return false;\n                          } else {\n                            for (var key2 in data10) {\n                              var _errs25 = errors;\n                              var _errs26 = errors;\n\n                              if (errors === _errs26) {\n                                if (typeof key2 === \"string\") {\n                                  if (func2(key2) > 10) {\n                                    var err0 = {\n                                      instancePath: instancePath + \"/tags\",\n                                      schemaPath: \"#/definitions/TagIdentifier/maxLength\",\n                                      keyword: \"maxLength\",\n                                      params: {\n                                        limit: 10\n                                      },\n                                      message: \"must NOT have more than 10 characters\",\n                                      propertyName: key2\n                                    };\n\n                                    if (vErrors === null) {\n                                      vErrors = [err0];\n                                    } else {\n                                      vErrors.push(err0);\n                                    }\n\n                                    errors++;\n                                  } else {\n                                    if (func2(key2) < 1) {\n                                      var err1 = {\n                                        instancePath: instancePath + \"/tags\",\n                                        schemaPath: \"#/definitions/TagIdentifier/minLength\",\n                                        keyword: \"minLength\",\n                                        params: {\n                                          limit: 1\n                                        },\n                                        message: \"must NOT have fewer than 1 characters\",\n                                        propertyName: key2\n                                      };\n\n                                      if (vErrors === null) {\n                                        vErrors = [err1];\n                                      } else {\n                                        vErrors.push(err1);\n                                      }\n\n                                      errors++;\n                                    } else {\n                                      if (!pattern4.test(key2)) {\n                                        var err2 = {\n                                          instancePath: instancePath + \"/tags\",\n                                          schemaPath: \"#/definitions/TagIdentifier/pattern\",\n                                          keyword: \"pattern\",\n                                          params: {\n                                            pattern: \"^[\\\\w]+$\"\n                                          },\n                                          message: \"must match pattern \\\"\" + \"^[\\\\w]+$\" + \"\\\"\",\n                                          propertyName: key2\n                                        };\n\n                                        if (vErrors === null) {\n                                          vErrors = [err2];\n                                        } else {\n                                          vErrors.push(err2);\n                                        }\n\n                                        errors++;\n                                      }\n                                    }\n                                  }\n                                } else {\n                                  var err3 = {\n                                    instancePath: instancePath + \"/tags\",\n                                    schemaPath: \"#/definitions/TagIdentifier/type\",\n                                    keyword: \"type\",\n                                    params: {\n                                      type: \"string\"\n                                    },\n                                    message: \"must be string\",\n                                    propertyName: key2\n                                  };\n\n                                  if (vErrors === null) {\n                                    vErrors = [err3];\n                                  } else {\n                                    vErrors.push(err3);\n                                  }\n\n                                  errors++;\n                                }\n                              }\n\n                              var valid6 = _errs25 === errors;\n\n                              if (!valid6) {\n                                var err4 = {\n                                  instancePath: instancePath + \"/tags\",\n                                  schemaPath: \"#/properties/tags/propertyNames\",\n                                  keyword: \"propertyNames\",\n                                  params: {\n                                    propertyName: key2\n                                  },\n                                  message: \"property name must be valid\"\n                                };\n\n                                if (vErrors === null) {\n                                  vErrors = [err4];\n                                } else {\n                                  vErrors.push(err4);\n                                }\n\n                                errors++;\n                                validate10.errors = vErrors;\n                                return false;\n                              }\n                            }\n\n                            if (valid6) {\n                              for (var key3 in data10) {\n                                var data11 = data10[key3];\n                                var _errs29 = errors;\n                                var _errs30 = errors;\n\n                                if (errors === _errs30) {\n                                  if (data11 && _typeof(data11) == \"object\" && !Array.isArray(data11)) {\n                                    var missing2 = void 0;\n\n                                    if (data11.name === undefined && (missing2 = \"name\") || data11.description === undefined && (missing2 = \"description\")) {\n                                      validate10.errors = [{\n                                        instancePath: instancePath + \"/tags/\" + key3.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                                        schemaPath: \"#/definitions/TagDefinition/required\",\n                                        keyword: \"required\",\n                                        params: {\n                                          missingProperty: missing2\n                                        },\n                                        message: \"must have required property '\" + missing2 + \"'\"\n                                      }];\n                                      return false;\n                                    } else {\n                                      var _errs32 = errors;\n\n                                      for (var key4 in data11) {\n                                        if (!(key4 === \"name\" || key4 === \"description\")) {\n                                          validate10.errors = [{\n                                            instancePath: instancePath + \"/tags/\" + key3.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                                            schemaPath: \"#/definitions/TagDefinition/additionalProperties\",\n                                            keyword: \"additionalProperties\",\n                                            params: {\n                                              additionalProperty: key4\n                                            },\n                                            message: \"must NOT have additional properties\"\n                                          }];\n                                          return false;\n                                        }\n                                      }\n\n                                      if (_errs32 === errors) {\n                                        if (data11.name !== undefined) {\n                                          var data12 = data11.name;\n                                          var _errs33 = errors;\n\n                                          if (errors === _errs33) {\n                                            if (typeof data12 === \"string\") {\n                                              if (func2(data12) > 20) {\n                                                validate10.errors = [{\n                                                  instancePath: instancePath + \"/tags/\" + key3.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/name\",\n                                                  schemaPath: \"#/definitions/TagDefinition/properties/name/maxLength\",\n                                                  keyword: \"maxLength\",\n                                                  params: {\n                                                    limit: 20\n                                                  },\n                                                  message: \"must NOT have more than 20 characters\"\n                                                }];\n                                                return false;\n                                              } else {\n                                                if (func2(data12) < 1) {\n                                                  validate10.errors = [{\n                                                    instancePath: instancePath + \"/tags/\" + key3.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/name\",\n                                                    schemaPath: \"#/definitions/TagDefinition/properties/name/minLength\",\n                                                    keyword: \"minLength\",\n                                                    params: {\n                                                      limit: 1\n                                                    },\n                                                    message: \"must NOT have fewer than 1 characters\"\n                                                  }];\n                                                  return false;\n                                                } else {\n                                                  if (!pattern10.test(data12)) {\n                                                    validate10.errors = [{\n                                                      instancePath: instancePath + \"/tags/\" + key3.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/name\",\n                                                      schemaPath: \"#/definitions/TagDefinition/properties/name/pattern\",\n                                                      keyword: \"pattern\",\n                                                      params: {\n                                                        pattern: \"^[ \\\\w]+$\"\n                                                      },\n                                                      message: \"must match pattern \\\"\" + \"^[ \\\\w]+$\" + \"\\\"\"\n                                                    }];\n                                                    return false;\n                                                  }\n                                                }\n                                              }\n                                            } else {\n                                              validate10.errors = [{\n                                                instancePath: instancePath + \"/tags/\" + key3.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/name\",\n                                                schemaPath: \"#/definitions/TagDefinition/properties/name/type\",\n                                                keyword: \"type\",\n                                                params: {\n                                                  type: \"string\"\n                                                },\n                                                message: \"must be string\"\n                                              }];\n                                              return false;\n                                            }\n                                          }\n\n                                          var valid10 = _errs33 === errors;\n                                        } else {\n                                          var valid10 = true;\n                                        }\n\n                                        if (valid10) {\n                                          if (data11.description !== undefined) {\n                                            var data13 = data11.description;\n                                            var _errs35 = errors;\n\n                                            if (errors === _errs35) {\n                                              if (typeof data13 === \"string\") {\n                                                if (func2(data13) > 200) {\n                                                  validate10.errors = [{\n                                                    instancePath: instancePath + \"/tags/\" + key3.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/description\",\n                                                    schemaPath: \"#/definitions/TagDefinition/properties/description/maxLength\",\n                                                    keyword: \"maxLength\",\n                                                    params: {\n                                                      limit: 200\n                                                    },\n                                                    message: \"must NOT have more than 200 characters\"\n                                                  }];\n                                                  return false;\n                                                } else {\n                                                  if (func2(data13) < 1) {\n                                                    validate10.errors = [{\n                                                      instancePath: instancePath + \"/tags/\" + key3.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/description\",\n                                                      schemaPath: \"#/definitions/TagDefinition/properties/description/minLength\",\n                                                      keyword: \"minLength\",\n                                                      params: {\n                                                        limit: 1\n                                                      },\n                                                      message: \"must NOT have fewer than 1 characters\"\n                                                    }];\n                                                    return false;\n                                                  } else {\n                                                    if (!pattern11.test(data13)) {\n                                                      validate10.errors = [{\n                                                        instancePath: instancePath + \"/tags/\" + key3.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/description\",\n                                                        schemaPath: \"#/definitions/TagDefinition/properties/description/pattern\",\n                                                        keyword: \"pattern\",\n                                                        params: {\n                                                          pattern: \"^[ \\\\w\\\\.,:]+$\"\n                                                        },\n                                                        message: \"must match pattern \\\"\" + \"^[ \\\\w\\\\.,:]+$\" + \"\\\"\"\n                                                      }];\n                                                      return false;\n                                                    }\n                                                  }\n                                                }\n                                              } else {\n                                                validate10.errors = [{\n                                                  instancePath: instancePath + \"/tags/\" + key3.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/description\",\n                                                  schemaPath: \"#/definitions/TagDefinition/properties/description/type\",\n                                                  keyword: \"type\",\n                                                  params: {\n                                                    type: \"string\"\n                                                  },\n                                                  message: \"must be string\"\n                                                }];\n                                                return false;\n                                              }\n                                            }\n\n                                            var valid10 = _errs35 === errors;\n                                          } else {\n                                            var valid10 = true;\n                                          }\n                                        }\n                                      }\n                                    }\n                                  } else {\n                                    validate10.errors = [{\n                                      instancePath: instancePath + \"/tags/\" + key3.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                                      schemaPath: \"#/definitions/TagDefinition/type\",\n                                      keyword: \"type\",\n                                      params: {\n                                        type: \"object\"\n                                      },\n                                      message: \"must be object\"\n                                    }];\n                                    return false;\n                                  }\n                                }\n\n                                var valid8 = _errs29 === errors;\n\n                                if (!valid8) {\n                                  break;\n                                }\n                              }\n                            }\n                          }\n                        } else {\n                          validate10.errors = [{\n                            instancePath: instancePath + \"/tags\",\n                            schemaPath: \"#/properties/tags/type\",\n                            keyword: \"type\",\n                            params: {\n                              type: \"object\"\n                            },\n                            message: \"must be object\"\n                          }];\n                          return false;\n                        }\n                      }\n\n                      var valid0 = _errs23 === errors;\n                    } else {\n                      var valid0 = true;\n                    }\n\n                    if (valid0) {\n                      if (data.logoURI !== undefined) {\n                        var data14 = data.logoURI;\n                        var _errs37 = errors;\n\n                        if (errors === _errs37) {\n                          if (errors === _errs37) {\n                            if (typeof data14 === \"string\") {\n                              if (!formats2(data14)) {\n                                validate10.errors = [{\n                                  instancePath: instancePath + \"/logoURI\",\n                                  schemaPath: \"#/properties/logoURI/format\",\n                                  keyword: \"format\",\n                                  params: {\n                                    format: \"uri\"\n                                  },\n                                  message: \"must match format \\\"\" + \"uri\" + \"\\\"\"\n                                }];\n                                return false;\n                              }\n                            } else {\n                              validate10.errors = [{\n                                instancePath: instancePath + \"/logoURI\",\n                                schemaPath: \"#/properties/logoURI/type\",\n                                keyword: \"type\",\n                                params: {\n                                  type: \"string\"\n                                },\n                                message: \"must be string\"\n                              }];\n                              return false;\n                            }\n                          }\n                        }\n\n                        var valid0 = _errs37 === errors;\n                      } else {\n                        var valid0 = true;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    } else {\n      validate10.errors = [{\n        instancePath: instancePath,\n        schemaPath: \"#/type\",\n        keyword: \"type\",\n        params: {\n          type: \"object\"\n        },\n        message: \"must be object\"\n      }];\n      return false;\n    }\n  }\n\n  validate10.errors = vErrors;\n  return errors === 0;\n}\n\nexport { validate10 as default, validate };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nfunction ucs2length(str) {\n    const len = str.length;\n    let length = 0;\n    let pos = 0;\n    let value;\n    while (pos < len) {\n        length++;\n        value = str.charCodeAt(pos++);\n        if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n            // high surrogate, and there is a next character\n            value = str.charCodeAt(pos);\n            if ((value & 0xfc00) === 0xdc00)\n                pos++; // low surrogate\n        }\n    }\n    return length;\n}\nexports.default = ucs2length;\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default';\n//# sourceMappingURL=ucs2length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatNames = exports.fastFormats = exports.fullFormats = void 0;\nfunction fmtDef(validate, compare) {\n    return { validate, compare };\n}\nexports.fullFormats = {\n    // date: http://tools.ietf.org/html/rfc3339#section-5.6\n    date: fmtDef(date, compareDate),\n    // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n    time: fmtDef(time, compareTime),\n    \"date-time\": fmtDef(date_time, compareDateTime),\n    // duration: https://tools.ietf.org/html/rfc3339#appendix-A\n    duration: /^P(?!$)((\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?|(\\d+W)?)$/,\n    uri,\n    \"uri-reference\": /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,\n    // uri-template: https://tools.ietf.org/html/rfc6570\n    \"uri-template\": /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n    // For the source: https://gist.github.com/dperini/729294\n    // For test cases: https://mathiasbynens.be/demo/url-regex\n    url: /^(?:https?|ftp):\\/\\/(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)(?:\\.(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n    email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n    hostname: /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i,\n    // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n    ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n    ipv6: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i,\n    regex,\n    // uuid: http://tools.ietf.org/html/rfc4122\n    uuid: /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n    // JSON-pointer: https://tools.ietf.org/html/rfc6901\n    // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n    \"json-pointer\": /^(?:\\/(?:[^~/]|~0|~1)*)*$/,\n    \"json-pointer-uri-fragment\": /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n    // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n    \"relative-json-pointer\": /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n    // the following formats are used by the openapi specification: https://spec.openapis.org/oas/v3.0.0#data-types\n    // byte: https://github.com/miguelmota/is-base64\n    byte,\n    // signed 32 bit integer\n    int32: { type: \"number\", validate: validateInt32 },\n    // signed 64 bit integer\n    int64: { type: \"number\", validate: validateInt64 },\n    // C-type float\n    float: { type: \"number\", validate: validateNumber },\n    // C-type double\n    double: { type: \"number\", validate: validateNumber },\n    // hint to the UI to hide input strings\n    password: true,\n    // unchecked string payload\n    binary: true,\n};\nexports.fastFormats = {\n    ...exports.fullFormats,\n    date: fmtDef(/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/, compareDate),\n    time: fmtDef(/^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i, compareTime),\n    \"date-time\": fmtDef(/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i, compareDateTime),\n    // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n    uri: /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/)?[^\\s]*$/i,\n    \"uri-reference\": /^(?:(?:[a-z][a-z0-9+\\-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i,\n    // email (sources from jsen validator):\n    // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n    // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'wilful violation')\n    email: /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n};\nexports.formatNames = Object.keys(exports.fullFormats);\nfunction isLeapYear(year) {\n    // https://tools.ietf.org/html/rfc3339#appendix-C\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nconst DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction date(str) {\n    // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n    const matches = DATE.exec(str);\n    if (!matches)\n        return false;\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    return (month >= 1 &&\n        month <= 12 &&\n        day >= 1 &&\n        day <= (month === 2 && isLeapYear(year) ? 29 : DAYS[month]));\n}\nfunction compareDate(d1, d2) {\n    if (!(d1 && d2))\n        return undefined;\n    if (d1 > d2)\n        return 1;\n    if (d1 < d2)\n        return -1;\n    return 0;\n}\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nfunction time(str, withTimeZone) {\n    const matches = TIME.exec(str);\n    if (!matches)\n        return false;\n    const hour = +matches[1];\n    const minute = +matches[2];\n    const second = +matches[3];\n    const timeZone = matches[5];\n    return (((hour <= 23 && minute <= 59 && second <= 59) ||\n        (hour === 23 && minute === 59 && second === 60)) &&\n        (!withTimeZone || timeZone !== \"\"));\n}\nfunction compareTime(t1, t2) {\n    if (!(t1 && t2))\n        return undefined;\n    const a1 = TIME.exec(t1);\n    const a2 = TIME.exec(t2);\n    if (!(a1 && a2))\n        return undefined;\n    t1 = a1[1] + a1[2] + a1[3] + (a1[4] || \"\");\n    t2 = a2[1] + a2[2] + a2[3] + (a2[4] || \"\");\n    if (t1 > t2)\n        return 1;\n    if (t1 < t2)\n        return -1;\n    return 0;\n}\nconst DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n    // http://tools.ietf.org/html/rfc3339#section-5.6\n    const dateTime = str.split(DATE_TIME_SEPARATOR);\n    return dateTime.length === 2 && date(dateTime[0]) && time(dateTime[1], true);\n}\nfunction compareDateTime(dt1, dt2) {\n    if (!(dt1 && dt2))\n        return undefined;\n    const [d1, t1] = dt1.split(DATE_TIME_SEPARATOR);\n    const [d2, t2] = dt2.split(DATE_TIME_SEPARATOR);\n    const res = compareDate(d1, d2);\n    if (res === undefined)\n        return undefined;\n    return res || compareTime(t1, t2);\n}\nconst NOT_URI_FRAGMENT = /\\/|:/;\nconst URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nfunction uri(str) {\n    // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n    return NOT_URI_FRAGMENT.test(str) && URI.test(str);\n}\nconst BYTE = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm;\nfunction byte(str) {\n    BYTE.lastIndex = 0;\n    return BYTE.test(str);\n}\nconst MIN_INT32 = -(2 ** 31);\nconst MAX_INT32 = 2 ** 31 - 1;\nfunction validateInt32(value) {\n    return Number.isInteger(value) && value <= MAX_INT32 && value >= MIN_INT32;\n}\nfunction validateInt64(value) {\n    // JSON and javascript max Int is 2**53, so any int that passes isInteger is valid for Int64\n    return Number.isInteger(value);\n}\nfunction validateNumber() {\n    return true;\n}\nconst Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n    if (Z_ANCHOR.test(str))\n        return false;\n    try {\n        new RegExp(str);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n//# sourceMappingURL=formats.js.map"],"sourceRoot":""}